// Generated by view binder compiler. Do not edit!
package professorchaos0802.todo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import professorchaos0802.todo.R;

public final class ListItemLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout itemLayout;

  @NonNull
  public final TextView itemOwner;

  @NonNull
  public final CheckBox itemValue;

  private ListItemLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout itemLayout, @NonNull TextView itemOwner,
      @NonNull CheckBox itemValue) {
    this.rootView = rootView;
    this.itemLayout = itemLayout;
    this.itemOwner = itemOwner;
    this.itemValue = itemValue;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout itemLayout = (RelativeLayout) rootView;

      id = R.id.item_owner;
      TextView itemOwner = ViewBindings.findChildViewById(rootView, id);
      if (itemOwner == null) {
        break missingId;
      }

      id = R.id.item_value;
      CheckBox itemValue = ViewBindings.findChildViewById(rootView, id);
      if (itemValue == null) {
        break missingId;
      }

      return new ListItemLayoutBinding((RelativeLayout) rootView, itemLayout, itemOwner, itemValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
